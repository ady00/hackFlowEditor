{
  "version": 3,
  "sources": ["../html-2-jsx/node_modules/react-dom/lib/reactProdInvariant.js", "../fbjs/lib/invariant.js", "../html-2-jsx/node_modules/react-dom/lib/DOMProperty.js", "../html-2-jsx/node_modules/react-dom/lib/HTMLDOMPropertyConfig.js", "../html-2-jsx/node_modules/react-dom/lib/SVGDOMPropertyConfig.js", "../html-2-jsx/src/htmltojsx.js", "../html-2-jsx/src/browser.js", "dep:html-2-jsx"],
  "sourcesContent": ["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   *\n   * autofocus is predefined, because adding it to the property whitelist\n   * causes unintended side effects.\n   *\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    controlsList: 0,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {},\n  DOMMutationMethods: {\n    value: function (node, value) {\n      if (value == null) {\n        return node.removeAttribute('value');\n      }\n\n      // Number inputs get special treatment due to some edge cases in\n      // Chrome. Let everything else assign the value attribute as normal.\n      // https://github.com/facebook/react/issues/7253#issuecomment-236074326\n      if (node.type !== 'number' || node.hasAttribute('value') === false) {\n        node.setAttribute('value', '' + value);\n      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {\n        // Don't assign an attribute if validation reports bad\n        // input. Chrome will clear the value. Additionally, don't\n        // operate on inputs that have focus, otherwise Chrome might\n        // strip off trailing decimal places and cause the user's\n        // cursor position to jump to the beginning of the input.\n        //\n        // In ReactDOMInput, we have an onBlur event that will trigger\n        // this function again when focus is lost.\n        node.setAttribute('value', '' + value);\n      }\n    }\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;", "/** @preserve\r\n *  Copyright (c) 2014, Facebook, Inc.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree. An additional grant\r\n *  of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n */\r\n'use strict';\r\n\r\n/**\r\n * This is a very simple HTML to JSX converter. It turns out that browsers\r\n * have good HTML parsers (who would have thought?) so we utilise this by\r\n * inserting the HTML into a temporary DOM node, and then do a breadth-first\r\n * traversal of the resulting DOM tree.\r\n */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType\r\nvar NODE_TYPE = {\r\n    ELEMENT: 1,\r\n    TEXT: 3,\r\n    COMMENT: 8\r\n};\r\n\r\nvar ATTRIBUTE_MAPPING = {\r\n    'for': 'htmlFor',\r\n    'class': 'className'\r\n};\r\n\r\nvar ELEMENT_ATTRIBUTE_MAPPING = {\r\n    'input': {\r\n        'checked': 'defaultChecked',\r\n        'value': 'defaultValue'\r\n    }\r\n};\r\n\r\nvar SVG_ATTRIBUTE_MAPPING = {};\r\n\r\nvar SVG_TAG_MAPPING = [\r\n    'circle', 'defs', 'ellipse', 'g', 'line', 'linearGradient', 'mask',\r\n    'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect',\r\n    'stop', 'svg', 'text', 'tspan'\r\n];\r\n/**\r\n * \u9047\u5230 key \u4E3A\u8FD9\u4E9B\u6807\u7B7E\u7684\u6700\u5916\u5C42\u9700\u8981\u7528 value \u5BF9\u5E94\u7684\u6807\u7B7E\u5305\u88F9, \u4F46\u4EE5\u4E0B\u7684\u6807\u7B7E\u9664\u5916, \u4E0D\u80FD\u641E\r\n * noframes, frame, frameset, html, head, body, script\r\n * @type {{thead: string, tbody: string, tfoot: string, caption: string, colgroup: string, col: string, tr: string, th: string, td: string, dt: string, dd: string}}\r\n */\r\nvar CONTAINER_MAPPING = {\r\n    'thead': 'table',\r\n    'tbody': 'table',\r\n    'tfoot': 'table',\r\n    'caption': 'table',\r\n    'colgroup': 'table',\r\n    'col': 'colgroup',\r\n    'tr': 'tbody',\r\n    'th': 'tr',\r\n    'td': 'tr',\r\n    'dt': 'dl',\r\n    'dd': 'dl',\r\n};\r\n\r\nvar HTMLDOMPropertyConfig = require('react-dom/lib/HTMLDOMPropertyConfig');\r\nvar SVGDOMPropertyConfig = require('react-dom/lib/SVGDOMPropertyConfig');\r\n\r\n// Populate property map with ReactJS's attribute and property mappings\r\n// TODO handle/use .Properties value eg: MUST_USE_PROPERTY is not HTML attr\r\nfor (var propname in HTMLDOMPropertyConfig.Properties) {\r\n    if (!HTMLDOMPropertyConfig.Properties.hasOwnProperty(propname)) {\r\n        continue;\r\n    }\r\n\r\n    var mapFrom = HTMLDOMPropertyConfig.DOMAttributeNames[propname] || propname.toLowerCase();\r\n\r\n    if (!ATTRIBUTE_MAPPING[mapFrom])\r\n        ATTRIBUTE_MAPPING[mapFrom] = propname;\r\n}\r\n\r\nfor (var propname in SVGDOMPropertyConfig.Properties) {\r\n    if (!SVGDOMPropertyConfig.Properties.hasOwnProperty(propname)) {\r\n        continue;\r\n    }\r\n\r\n    var mapFrom = SVGDOMPropertyConfig.DOMAttributeNames[propname] || propname.toLowerCase();\r\n\r\n    if (!ATTRIBUTE_MAPPING[mapFrom])\r\n        SVG_ATTRIBUTE_MAPPING[mapFrom] = propname;\r\n}\r\n\r\n/**\r\n * Repeats a string a certain number of times.\r\n * Also: the future is bright and consists of native string repetition:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\r\n *\r\n * @param {string} string  String to repeat\r\n * @param {number} times   Number of times to repeat string. Integer.\r\n * @see http://jsperf.com/string-repeater/2\r\n */\r\nfunction repeatString(string, times) {\r\n    if (times === 1) {\r\n        return string;\r\n    }\r\n    if (times < 0) {\r\n        throw new Error();\r\n    }\r\n    var repeated = '';\r\n    while (times) {\r\n        if (times & 1) {\r\n            repeated += string;\r\n        }\r\n        if (times >>= 1) {\r\n            string += string;\r\n        }\r\n    }\r\n    return repeated;\r\n}\r\n\r\n/**\r\n * Determine if the string ends with the specified substring.\r\n *\r\n * @param {string} haystack String to search in\r\n * @param {string} needle   String to search for\r\n * @return {boolean}\r\n */\r\nfunction endsWith(haystack, needle) {\r\n    return haystack.slice(-needle.length) === needle;\r\n}\r\n\r\n/**\r\n * Trim the specified substring off the string. If the string does not end\r\n * with the specified substring, this is a no-op.\r\n *\r\n * @param {string} haystack String to search in\r\n * @param {string} needle   String to search for\r\n * @return {string}\r\n */\r\nfunction trimEnd(haystack, needle) {\r\n    return endsWith(haystack, needle)\r\n        ? haystack.slice(0, -needle.length)\r\n        : haystack;\r\n}\r\n\r\n/**\r\n * Convert a hyphenated string to camelCase.\r\n */\r\nfunction hyphenToCamelCase(string) {\r\n    return string.replace(/-(.)/g, function (match, chr) {\r\n        return chr.toUpperCase();\r\n    });\r\n}\r\n\r\n/**\r\n * Determines if the specified string consists entirely of whitespace.\r\n */\r\nfunction isEmpty(string) {\r\n    return !/[^\\s]/.test(string);\r\n}\r\n\r\n/**\r\n * Determines if the CSS value can be converted from a\r\n * 'px' suffixed string to a numeric value\r\n *\r\n * @param {string} value CSS property value\r\n * @return {boolean}\r\n */\r\nfunction isConvertiblePixelValue(value) {\r\n    return /^\\d+px$/.test(value);\r\n}\r\n\r\n/**\r\n * Determines if the specified string consists entirely of numeric characters.\r\n */\r\nfunction isNumeric(input) {\r\n    return input !== undefined\r\n        && input !== null\r\n        && (typeof input === 'number' || parseInt(input, 10) == input);\r\n}\r\n/**\r\n * Handles parsing of inline styles\r\n *\r\n * @param {string} rawStyle Raw style attribute\r\n * @constructor\r\n */\r\nconst StyleParser = function (rawStyle) {\r\n    this.parse(rawStyle);\r\n};\r\nStyleParser.prototype = {\r\n    /**\r\n     * Parse the specified inline style attribute value\r\n     * @param {string} rawStyle Raw style attribute\r\n     */\r\n    parse: function (rawStyle) {\r\n        this.styles = {};\r\n        rawStyle.split(';').forEach(function (style) {\r\n            style = style.trim();\r\n            var firstColon = style.indexOf(':');\r\n            var key = style.substr(0, firstColon);\r\n            var value = style.substr(firstColon + 1).trim();\r\n            if (key !== '') {\r\n                // Style key should be case insensitive\r\n                key = key.toLowerCase();\r\n                this.styles[key] = value;\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    /**\r\n     * Convert the style information represented by this parser into a JSX\r\n     * string\r\n     *\r\n     * @return {string}\r\n     */\r\n    toJSXString: function () {\r\n        var output = [];\r\n        for (var key in this.styles) {\r\n            if (!this.styles.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            output.push(this.toJSXKey(key) + ': ' + this.toJSXValue(this.styles[key]));\r\n        }\r\n        return output.join(', ');\r\n    },\r\n\r\n    /**\r\n     * Convert the CSS style key to a JSX style key\r\n     *\r\n     * @param {string} key CSS style key\r\n     * @return {string} JSX style key\r\n     */\r\n    toJSXKey: function (key) {\r\n        // Don't capitalize -ms- prefix\r\n        if (/^-ms-/.test(key)) {\r\n            key = key.substr(1);\r\n        }\r\n        return hyphenToCamelCase(key);\r\n    },\r\n\r\n    /**\r\n     * Convert the CSS style value to a JSX style value\r\n     *\r\n     * @param {string} value CSS style value\r\n     * @return {string} JSX style value\r\n     */\r\n    toJSXValue: function (value) {\r\n        if (isNumeric(value)) {\r\n            // If numeric, no quotes\r\n            return value;\r\n        } else if (isConvertiblePixelValue(value)) {\r\n            // \"500px\" -> 500\r\n            return trimEnd(value, 'px');\r\n        } else {\r\n            // Probably a string, wrap it in quotes\r\n            return '\\'' + value.replace(/'/g, '\"') + '\\'';\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = createElement => {\r\n    const tempEl = createElement('div');\r\n    /**\r\n     * Escapes special characters by converting them to their escaped equivalent\r\n     * (eg. \"<\" to \"&lt;\"). Only escapes characters that absolutely must be escaped.\r\n     *\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    function escapeSpecialChars(value) {\r\n        // Uses this One Weird Trick to escape text - Raw text inserted as textContent\r\n        // will have its escaped version in innerHTML.\r\n        tempEl.textContent = value;\r\n        return tempEl.innerHTML;\r\n    }\r\n\r\n    const HTMLtoJSX = function (config) {\r\n        this.config = config || {};\r\n\r\n        if (this.config.createClass === undefined) {\r\n            this.config.createClass = true;\r\n        }\r\n        if (this.config.outputClassName && this.config.outputClassName + '') {\r\n            this.config.outputClassName = this.config.outputClassName.replace(/^\\w/, function (s) {\r\n                return s.toUpperCase();\r\n            });\r\n        }\r\n        if (!this.config.indent) {\r\n            this.config.indent = '  ';\r\n        }\r\n    };\r\n\r\n    HTMLtoJSX.prototype = {\r\n        /**\r\n         * Reset the internal state of the converter\r\n         */\r\n        reset: function () {\r\n            this.output = '';\r\n            this.level = 0;\r\n            this._inPreTag = false;\r\n        },\r\n        /**\r\n         * Main entry point to the converter. Given the specified HTML, returns a\r\n         * JSX object representing it.\r\n         * @param {string} html HTML to convert\r\n         * @return {string} JSX\r\n         */\r\n        convert: function (html) {\r\n            this.reset();\r\n\r\n            var containerEl = createElement(this._chooseContainer(html));\r\n            containerEl.innerHTML = '\\n' + this._cleanInput(html) + '\\n';\r\n\r\n            if (this.config.createClass) {\r\n                if (this.config.outputClassName) {\r\n                    this.output = 'var ' + this.config.outputClassName + ' = React.createClass({\\n';\r\n                } else {\r\n                    this.output = 'React.createClass({\\n';\r\n                }\r\n                this.output += this.config.indent + 'render: function() {' + \"\\n\";\r\n                this.output += this.config.indent + this.config.indent + 'return (\\n';\r\n            }\r\n\r\n            if (this._onlyOneTopLevel(containerEl)) {\r\n                // Only one top-level element, the component can return it directly\r\n                // No need to actually visit the container element\r\n                this._traverse(containerEl);\r\n            } else {\r\n                // More than one top-level element, need to wrap the whole thing in a\r\n                // container.\r\n                this.output += this.config.indent + this.config.indent + this.config.indent;\r\n                this.level++;\r\n                this._visit(containerEl);\r\n            }\r\n            this.output = this.output.trim() + '\\n';\r\n            if (this.config.createClass) {\r\n                this.output += this.config.indent + this.config.indent + ');\\n';\r\n                this.output += this.config.indent + '}\\n';\r\n                this.output += '});';\r\n            }\r\n            return this.output;\r\n        },\r\n        /**\r\n         * Choose the correct container of input html.\r\n         * Edited by RequireSun 2016-11-19 17:36\r\n         * @param {string} html HTML you want to format\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        _chooseContainer: function (html) {\r\n            var regex = /<([^\\s>]+)/;\r\n            regex = (html || '').match(regex);\r\n\r\n            return (regex && CONTAINER_MAPPING[regex[1]]) ? CONTAINER_MAPPING[regex[1]] : 'div';\r\n        },\r\n        /**\r\n         * Cleans up the specified HTML so it's in a format acceptable for\r\n         * converting.\r\n         *\r\n         * @param {string} html HTML to clean\r\n         * @return {string} Cleaned HTML\r\n         */\r\n        _cleanInput: function (html) {\r\n            // Remove unnecessary whitespace\r\n            html = html.trim();\r\n            // Ugly method to strip script tags. They can wreak havoc on the DOM nodes\r\n            // so let's not even put them in the DOM.\r\n            html = html.replace(/<script([\\s\\S]*?)<\\/script>/g, '');\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Determines if there's only one top-level node in the DOM tree. That is,\r\n         * all the HTML is wrapped by a single HTML tag.\r\n         *\r\n         * @param {DOMElement} containerEl Container element\r\n         * @return {boolean}\r\n         */\r\n        _onlyOneTopLevel: function (containerEl) {\r\n            // Only a single child element\r\n            if (\r\n                containerEl.childNodes.length === 1\r\n                && containerEl.childNodes[0].nodeType === NODE_TYPE.ELEMENT\r\n            ) {\r\n                return true;\r\n            }\r\n            // Only one element, and all other children are whitespace\r\n            var foundElement = false;\r\n            for (var i = 0, count = containerEl.childNodes.length; i < count; i++) {\r\n                var child = containerEl.childNodes[i];\r\n                // Edited by RequireSun 2017-06-27\r\n                // fixed the bug of returns true when there's only a comment node\r\n                // and a DOM node at the top level\r\n                if (child.nodeType === NODE_TYPE.COMMENT || child.nodeType === NODE_TYPE.ELEMENT) {\r\n                    if (foundElement) {\r\n                        // Encountered an element after already encountering another one\r\n                        // Therefore, more than one element at root level\r\n                        return false;\r\n                    } else {\r\n                        foundElement = true;\r\n                    }\r\n                } else if (child.nodeType === NODE_TYPE.TEXT && !isEmpty(child.textContent)) {\r\n                    // Contains text content\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Gets a newline followed by the correct indentation for the current\r\n         * nesting level\r\n         *\r\n         * @return {string}\r\n         */\r\n        _getIndentedNewline: function () {\r\n            return '\\n' + repeatString(this.config.indent, this.level + (this.config.createClass ? 2 : -1));\r\n        },\r\n\r\n        /**\r\n         * Handles processing the specified node\r\n         *\r\n         * @param {Node} node\r\n         */\r\n        _visit: function (node) {\r\n            this._beginVisit(node);\r\n            this._traverse(node);\r\n            this._endVisit(node);\r\n        },\r\n\r\n        /**\r\n         * Traverses all the children of the specified node\r\n         *\r\n         * @param {Node} node\r\n         */\r\n        _traverse: function (node) {\r\n            this.level++;\r\n            for (var i = 0, count = node.childNodes.length; i < count; i++) {\r\n                this._visit(node.childNodes[i]);\r\n            }\r\n            this.level--;\r\n        },\r\n\r\n        /**\r\n         * Handle pre-visit behaviour for the specified node.\r\n         *\r\n         * @param {Node} node\r\n         */\r\n        _beginVisit: function (node) {\r\n            switch (node.nodeType) {\r\n                case NODE_TYPE.ELEMENT:\r\n                    this._beginVisitElement(node);\r\n                    break;\r\n\r\n                case NODE_TYPE.TEXT:\r\n                    this._visitText(node);\r\n                    break;\r\n\r\n                case NODE_TYPE.COMMENT:\r\n                    this._visitComment(node);\r\n                    break;\r\n\r\n                default:\r\n                    console.warn('Unrecognised node type: ' + node.nodeType);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles post-visit behaviour for the specified node.\r\n         *\r\n         * @param {Node} node\r\n         */\r\n        _endVisit: function (node) {\r\n            switch (node.nodeType) {\r\n                case NODE_TYPE.ELEMENT:\r\n                    this._endVisitElement(node);\r\n                    break;\r\n                // No ending tags required for these types\r\n                case NODE_TYPE.TEXT:\r\n                case NODE_TYPE.COMMENT:\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles pre-visit behaviour for the specified element node\r\n         *\r\n         * @param {DOMElement} node\r\n         */\r\n        _beginVisitElement: function (node) {\r\n            var tagName = node.tagName.toLowerCase();\r\n            var attributes = [];\r\n            for (var i = 0, count = node.attributes.length; i < count; i++) {\r\n                attributes.push(this._getElementAttribute(node, node.attributes[i]));\r\n            }\r\n\r\n            if (tagName === 'textarea') {\r\n                // Hax: textareas need their inner text moved to a \"defaultValue\" attribute.\r\n                attributes.push('defaultValue={' + JSON.stringify(node.value) + '}');\r\n            }\r\n            if (tagName === 'style') {\r\n                // Hax: style tag contents need to be dangerously set due to liberal curly brace usage\r\n                attributes.push('dangerouslySetInnerHTML={{__html: ' + JSON.stringify(node.textContent) + ' }}');\r\n            }\r\n            if (tagName === 'pre') {\r\n                this._inPreTag = true;\r\n            }\r\n\r\n            this.output += '<' + tagName;\r\n            if (attributes.length > 0) {\r\n                this.output += ' ' + attributes.join(' ');\r\n            }\r\n            if (!this._isSelfClosing(node)) {\r\n                this.output += '>';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles post-visit behaviour for the specified element node\r\n         *\r\n         * @param {Node} node\r\n         */\r\n        _endVisitElement: function (node) {\r\n            var tagName = node.tagName.toLowerCase();\r\n            // De-indent a bit\r\n            // TODO: It's inefficient to do it this way :/\r\n            this.output = trimEnd(this.output, this.config.indent);\r\n            if (this._isSelfClosing(node)) {\r\n                this.output += ' />';\r\n            } else {\r\n                this.output += '</' + node.tagName.toLowerCase() + '>';\r\n            }\r\n\r\n            if (tagName === 'pre') {\r\n                this._inPreTag = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determines if this element node should be rendered as a self-closing\r\n         * tag.\r\n         *\r\n         * @param {Node} node\r\n         * @return {boolean}\r\n         */\r\n        _isSelfClosing: function (node) {\r\n            // If it has children, it's not self-closing\r\n            // Exception: All children of a textarea are moved to a \"defaultValue\" attribute, style attributes are dangerously set.\r\n            return !node.firstChild || node.tagName.toLowerCase() === 'textarea' || node.tagName.toLowerCase() === 'style';\r\n        },\r\n\r\n        /**\r\n         * Handles processing of the specified text node\r\n         *\r\n         * @param {TextNode} node\r\n         */\r\n        _visitText: function (node) {\r\n            var parentTag = node.parentNode && node.parentNode.tagName.toLowerCase();\r\n            if (parentTag === 'textarea' || parentTag === 'style') {\r\n                // Ignore text content of textareas and styles, as it will have already been moved\r\n                // to a \"defaultValue\" attribute and \"dangerouslySetInnerHTML\" attribute respectively.\r\n                return;\r\n            }\r\n\r\n            var text = escapeSpecialChars(node.textContent);\r\n\r\n            if (this._inPreTag) {\r\n                // If this text is contained within a <pre>, we need to ensure the JSX\r\n                // whitespace coalescing rules don't eat the whitespace. This means\r\n                // wrapping newlines and sequences of two or more spaces in variables.\r\n                text = text\r\n                    .replace(/\\r/g, '')\r\n                    .replace(/( {2,}|\\n|\\t|\\{|\\})/g, function (whitespace) {\r\n                        return '{' + JSON.stringify(whitespace) + '}';\r\n                    });\r\n            } else {\r\n                // Handle any curly braces.\r\n                text = text\r\n                    .replace(/(\\{|\\})/g, function (brace) {\r\n                        return '{\\'' + brace + '\\'}';\r\n                    });\r\n                // If there's a newline in the text, adjust the indent level\r\n                if (text.indexOf('\\n') > -1) {\r\n                    text = text.replace(/\\n\\s*/g, this._getIndentedNewline());\r\n                }\r\n            }\r\n            this.output += text;\r\n        },\r\n\r\n        /**\r\n         * Handles processing of the specified text node\r\n         *\r\n         * @param {Text} node\r\n         */\r\n        _visitComment: function (node) {\r\n            if (this.config.hideComment) {\r\n                this.output = this.output.replace(/\\s+$/, '');\r\n            } else {\r\n                this.output += '{/*' + node.textContent.replace('*/', '* /') + '*/}';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets a JSX formatted version of the specified attribute from the node\r\n         *\r\n         * @param {DOMElement} node\r\n         * @param {object}     attribute\r\n         * @return {string}\r\n         */\r\n        _getElementAttribute: function (node, attribute) {\r\n            switch (attribute.name) {\r\n                case 'style':\r\n                    return this._getStyleAttribute(attribute.value);\r\n                default:\r\n                    var tagName = node.tagName.toLowerCase();\r\n                    var name =\r\n                        (ELEMENT_ATTRIBUTE_MAPPING[tagName] &&\r\n                        ELEMENT_ATTRIBUTE_MAPPING[tagName][attribute.name]) ||\r\n                        ATTRIBUTE_MAPPING[attribute.name] ||\r\n                        (-1 < SVG_TAG_MAPPING.indexOf(tagName) && SVG_ATTRIBUTE_MAPPING[attribute.name]) ||\r\n                        attribute.name;\r\n                    var result = name;\r\n\r\n                    if (-1 < name.indexOf(':')) {\r\n                        // value has ':' will make error\r\n                        result = '';\r\n                    } else if (isNumeric(attribute.value)) {\r\n                        // Numeric values should be output as {123} not \"123\"\r\n                        result += '={' + attribute.value + '}';\r\n                    } else if (attribute.value.length > 0) {\r\n                        result += '=\"' + attribute.value.replace(/\"/gm, '&quot;') + '\"';\r\n                    }\r\n\r\n                    return result;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets a JSX formatted version of the specified element styles\r\n         *\r\n         * @param {string} styles\r\n         * @return {string}\r\n         */\r\n        _getStyleAttribute: function (styles) {\r\n            var jsxStyles = new StyleParser(styles).toJSXString();\r\n            return 'style={{' + jsxStyles + '}}';\r\n        }\r\n    };\r\n\r\n    return HTMLtoJSX;\r\n};\r\n", "/**\r\n * Created by kelvinsun on 2017/6/27.\r\n */\r\nconst createElement = function (tag) {\r\n    return document.createElement(tag);\r\n};\r\nmodule.exports = require('./htmltojsx')(createElement);\r\n", "export default require(\"./node_modules/html-2-jsx/src/browser.js\");"],
  "mappings": "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",
  "names": []
}
