var e,t,n,r=require("@radix-ui/react-compose-refs").composeRefs,l=(e={},t=require("react"),Object.keys(t).forEach((function(n){"default"!==n&&"__esModule"!==n&&Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[n]}})})),e),o=(n=require("@babel/runtime/helpers/extends"))&&n.__esModule?n.default:n;const c=/*#__PURE__*/l.forwardRef(((e,t)=>{const{children:n,...r}=e;return 1===l.Children.count(n)?/*#__PURE__*/l.createElement(s,o({},r,{ref:t}),n):/*#__PURE__*/l.createElement(l.Fragment,null,l.Children.map(n,(e=>/*#__PURE__*/l.isValidElement(e)&&e.type===i?/*#__PURE__*/l.createElement(s,o({},r,{ref:t}),e.props.children):e)))}));exports.Slot=c,c.displayName="Slot";const s=/*#__PURE__*/l.forwardRef(((e,t)=>{const{children:n,...o}=e,c=l.Children.only(n);/*#__PURE__*/return l.isValidElement(c)?/*#__PURE__*/l.cloneElement(c,{...u(o,c.props),ref:r(t,c.ref)}):null}));s.displayName="SlotClone";const i=({children:e})=>e;function u(e,t){const n={...t};for(const r in t){const l=e[r],o=t[r];/^on[A-Z]/.test(r)?n[r]=a(o,l):"style"===r&&(n[r]={...l,...o})}return{...e,...n}}function a(e,t){return function(...n){null==e||e(...n);n[0]instanceof Event&&n[0].defaultPrevented||null==t||t(...n)}}exports.Slottable=i;const d=c;exports.Root=d;
//# sourceMappingURL=index.js.map
