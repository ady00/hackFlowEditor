{"mappings":"+BAMA,SAASA,eAAkDC,GACzD,MAAMC,EAAcC,EAAMC,OAAOH,GAMjC,OAJAE,EAAME,WAAU,KACdH,EAAYI,QAAUL,KAGjBE,EAAMI,aACV,IAAIC,KAAS,IAAAC,EACZ,OAAA,QAAAA,EAAOP,EAAYI,eAAnB,IAAAG,OAAA,EAAOA,EAAAC,KAAAR,KAAyBM,KAElC","sources":["./packages/react/use-callback-ref/src/useCallbackRef.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return React.useCallback(\n    ((...args) => {\n      return callbackRef.current?.(...args);\n    }) as T,\n    []\n  );\n}\n\nexport { useCallbackRef };\n"],"names":["useCallbackRef","callback","callbackRef","React","useRef","useEffect","current","useCallback","args","_callbackRef$current","call"],"version":3,"file":"index.module.js.map"}